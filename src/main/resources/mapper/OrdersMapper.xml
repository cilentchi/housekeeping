<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mhr.housekeeping.dao.OrdersMapper">

    <resultMap id="ordersMapper" type="OrdersDO">
        <result property="id" column="id"/>
        <result property="serviceId" column="service_id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="reverseTime" column="reverse_time"/>
        <result property="address" column="address"/>
        <result property="phone" column="phone"/>
        <result property="tip" column="tip"/>
        <result property="state" column="state"/>
        <result property="orderPrice" column="order_price"/>
        <result property="employerId" column="employer_id"/>
        <result property="createTime" column="create_time"/>
        <result property="endTime" column="end_time"/>
        <result property="rate" column="rate"/>
        <result property="prov" column="prov"/>
        <result property="city" column="city"/>
        <result property="pay" column="pay"/>
        <result property="reason" column="reason"/>
    </resultMap>
    <resultMap id="ordersMoreMapper" type="OrdersVO">
        <result property="id" column="id"/>
        <result property="serviceId" column="service_id"/>
        <result property="employeeId" column="employee_id"/>
        <result property="reverseTime" column="reverse_time"/>
        <result property="address" column="address"/>
        <result property="phone" column="phone"/>
        <result property="tip" column="tip"/>
        <result property="state" column="state"/>
        <result property="orderPrice" column="order_price"/>
        <result property="employerId" column="employer_id"/>
        <result property="createTime" column="create_time"/>
        <result property="endTime" column="end_time"/>
        <result property="rate" column="rate"/>
        <result property="prov" column="prov"/>
        <result property="city" column="city"/>
        <result property="pay" column="pay"/>
        <result property="reason" column="reason"/>
        <result property="serviceName" column="service_name"/>
        <result property="servicePrice" column="service_price"/>
        <result property="serviceParent" column="service_parent"/>
        <result property="realName" column="real_name"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="role" column="role"/>
        <result property="sex" column="sex"/>
        <result property="age" column="age"/>
        <result property="education" column="education"/>
        <result property="experience" column="experience"/>
        <result property="rankId" column="rank_id"/>
        <result property="rankName" column="rank_name"/>
        <result property="rankMoney" column="rank_money"/>
    </resultMap>

    <sql id="_table">
        orders
	</sql>

    <sql id="_fields">
		id,service_id,employee_id,reverse_time,address,phone,tip,state,order_price,employer_id,create_time,end_time,rate,prov,city,pay,reason
	</sql>

    <sql id="_condition">
        <trim prefix="WHERE" prefixOverrides="AND|OR">
            <if test="id!=null">
                AND id = #{id}
            </if>
            <if test="serviceId!=null">
                AND service_id = #{serviceId}
            </if>
            <if test="employeeId!=null">
                AND employee_id = #{employeeId}
            </if>
            <if test="reverseTime!=null">
                AND reverse_time = #{reverseTime}
            </if>
            <if test="address!=null and ''!=address">
                AND address = #{address}
            </if>
            <if test="phone!=null and ''!=phone">
                AND phone = #{phone}
            </if>
            <if test="tip!=null and ''!=tip">
                AND tip = #{tip}
            </if>
            <if test="state!=null">
                AND state = #{state}
            </if>
            <if test="orderPrice!=null">
                AND order_price = #{orderPrice}
            </if>
            <if test="employerId!=null">
                AND employer_id = #{employerId}
            </if>
            <if test="createTime!=null">
                AND create_time = #{createTime}
            </if>
            <if test="endTime!=null">
                AND end_time = #{endTime}
            </if>
            <if test="rate!=null">
                AND rate = #{rate}
            </if>
            <if test="prov!=null and ''!=prov">
                AND prov = #{prov}
            </if>
            <if test="city!=null and ''!=city">
                AND city = #{city}
            </if>
            <if test="pay!=null">
                AND pay = #{pay}
            </if>
            <if test="reason!=null and ''!=reason">
                AND reason = #{reason}
            </if>
        </trim>
    </sql>

    <sql id="_primaryKey_condition">
		WHERE id = #{id}
	</sql>

    <sql id="_order">
        <if test="sortByParams!= null and sortByParams.size()>0">
            ORDER BY
            <foreach collection="sortByParams.keys" index="index" item="sortByParamKey" separator=",">
                <![CDATA[${sortByParamKey} ${sortByParams[sortByParamKey]}]]>
            </foreach>
        </if>
    </sql>

    <insert id="addOrders" parameterType="OrdersVO" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="_table"/>
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id!=null">
                id,
            </if>
            <if test="serviceId!=null">
                service_id,
            </if>
            <if test="employeeId!=null">
                employee_id,
            </if>
            <if test="reverseTime!=null">
                reverse_time,
            </if>
            <if test="address!=null and ''!=address">
                address,
            </if>
            <if test="phone!=null and ''!=phone">
                phone,
            </if>
            <if test="tip!=null and ''!=tip">
                tip,
            </if>
            <if test="state!=null">
                state,
            </if>
            <if test="orderPrice!=null">
                order_price,
            </if>
            <if test="employerId!=null">
                employer_id,
            </if>
            <if test="createTime!=null">
                create_time,
            </if>
            <if test="endTime!=null">
                end_time,
            </if>
            <if test="rate!=null">
                rate,
            </if>
            <if test="prov!=null and ''!=prov">
                prov,
            </if>
            <if test="city!=null and ''!=city">
                city,
            </if>
            <if test="pay!=null">
                pay,
            </if>
            <if test="reason!=null and ''!=reason">
                reason,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id!=null">
                #{id},
            </if>
            <if test="serviceId!=null">
                #{serviceId},
            </if>
            <if test="employeeId!=null">
                #{employeeId},
            </if>
            <if test="reverseTime!=null">
                #{reverseTime},
            </if>
            <if test="address!=null and ''!=address">
                #{address},
            </if>
            <if test="phone!=null and ''!=phone">
                #{phone},
            </if>
            <if test="tip!=null and ''!=tip">
                #{tip},
            </if>
            <if test="state!=null">
                #{state},
            </if>
            <if test="orderPrice!=null">
                #{orderPrice},
            </if>
            <if test="employerId!=null">
                #{employerId},
            </if>
            <if test="createTime!=null">
                #{createTime},
            </if>
            <if test="endTime!=null">
                #{endTime},
            </if>
            <if test="rate!=null">
                #{rate},
            </if>
            <if test="prov!=null and ''!=prov">
                #{prov},
            </if>
            <if test="city!=null and ''!=city">
                #{city},
            </if>
            <if test="pay!=null">
                #{pay},
            </if>
            <if test="reason!=null and ''!=reason">
                #{reason}
            </if>
        </trim>
    </insert>

    <update id="updateOrders" parameterType="OrdersVO">
        UPDATE
        <include refid="_table"/>
        <set>
            <if test="serviceId!=null">
                service_id = #{serviceId},
            </if>
            <if test="employeeId!=null">
                employee_id = #{employeeId},
            </if>
            <if test="reverseTime!=null">
                reverse_time = #{reverseTime},
            </if>
            <if test="address!=null and ''!=address">
                address = #{address},
            </if>
            <if test="phone!=null and ''!=phone">
                phone = #{phone},
            </if>
            <if test="tip!=null and ''!=tip">
                tip = #{tip},
            </if>
            <if test="state!=null">
                state = #{state},
            </if>
            <if test="orderPrice!=null">
                order_price = #{orderPrice},
            </if>
            <if test="employerId!=null">
                employer_id = #{employerId},
            </if>
            <if test="createTime!=null">
                create_time = #{createTime},
            </if>
            <if test="endTime!=null">
                end_time = #{endTime},
            </if>
            <if test="rate!=null">
                rate = #{rate},
            </if>
            <if test="prov!=null and ''!=prov">
                prov = #{prov},
            </if>
            <if test="city!=null and ''!=city">
                city = #{city},
            </if>
            <if test="pay!=null">
                pay = #{pay},
            </if>
            <if test="reason!=null and ''!=reason">
                reason = #{reason}
            </if>
        </set>
        <include refid="_primaryKey_condition"/>
    </update>

    <select id="findDetailOrders" resultMap="ordersMapper" parameterType="OrdersVO">
        SELECT
        <include refid="_fields"/>
        FROM
        <include refid="_table"/>
        <include refid="_primaryKey_condition"/>
    </select>

    <select id="listOrders" resultMap="ordersMoreMapper" parameterType="OrdersVO">
        SELECT
        <include refid="_fields"/>
        FROM
        <include refid="_table"/>
        <include refid="_condition"/>
        <include refid="_order"/>
    </select>

    <select id="listEmployeeOrders" resultMap="ordersMoreMapper" parameterType="java.lang.Integer">
        SELECT
        orders.id,
        orders.service_id,
        orders.employee_id,
        orders.reverse_time,
        orders.address,
        orders.phone,
        orders.tip,
        orders.state,
        orders.order_price,
        orders.employer_id,
        orders.create_time,
        orders.end_time,
        orders.rate,
        orders.prov,
        orders.city,
        orders.pay,
        orders.reason,
        service.`name` AS service_name,
        service.price AS service_price,
        service.parent AS service_parent,
        `user`.`name` AS real_name,
        `user`.username,
        `user`.`password`,
        `user`.role,
        `user`.sex,
        `user`.age,
        `user`.education,
        `user`.experience,
        rank.id AS rank_id,
        rank.`name` AS rank_name,
        rank.money AS rank_money
        FROM
        orders
        INNER JOIN service ON orders.service_id = service.id
        INNER JOIN `user` ON orders.employee_id = `user`.id
        INNER JOIN user_service ON user_service.user_id = `user`.id AND user_service.service_id = service.id
        INNER JOIN rank ON user_service.rank_id = rank.id
        WHERE
        orders.employee_id = #{userId}
        <if test="state!=null">
            AND orders.state = #{state}
        </if>

    </select>
    <select id="listEmployerOrders" resultMap="ordersMoreMapper" parameterType="java.lang.Integer">
        SELECT
        orders.id,
        orders.service_id,
        orders.employee_id,
        orders.reverse_time,
        orders.address,
        orders.phone,
        orders.tip,
        orders.state,
        orders.order_price,
        orders.employer_id,
        orders.create_time,
        orders.end_time,
        orders.rate,
        orders.prov,
        orders.city,
        orders.pay,
        orders.reason,
        service.`name` AS service_name,
        service.price AS service_price,
        service.parent AS service_parent,
        `user`.`name` AS real_name,
        `user`.username,
        `user`.`password`,
        `user`.role,
        `user`.sex,
        `user`.age,
        `user`.education,
        `user`.experience
        FROM
        orders
        INNER JOIN service ON orders.service_id = service.id
        INNER JOIN `user` ON orders.employer_id = `user`.id
        WHERE
        orders.employer_id = #{userId}
        <if test="state!=null">
            AND orders.state = #{state}
        </if>

    </select>

    <select id="listOrdersPage" resultMap="ordersMoreMapper" parameterType="OrdersVO">
        SELECT
        <include refid="_fields"/>
        FROM
        <include refid="_table"/>
        <include refid="_condition"/>
        <include refid="_order"/>
        <if test="page != null and size != null and size >0">
            limit #{page},#{size}
        </if>
        <if test="!(page != null and size != null and size >0)">
            limit 0,15
        </if>
    </select>

    <select id="countOrders" resultType="java.lang.Integer" parameterType="OrdersVO">
        SELECT
        COUNT(*)
        FROM
        <include refid="_table"/>
        <include refid="_condition"/>
    </select>

    <select id="countGoodOrders" resultType="java.lang.Integer" parameterType="OrdersVO">
                SELECT count(*)
        FROM
        orders
        WHERE state=#{state} and employee_id= #{employeeId} and rate &gt; 2
    </select>

    <select id="countGoodOrders2" resultType="java.lang.Integer" parameterType="OrdersVO">
                SELECT count(*)
        FROM
        orders
        WHERE state=#{state} and employer_id= #{employerId} and rate &gt; 2
    </select>

    <select id="countOrdersByTime" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT count(*) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{timeItem} and #{time2}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
    </select>

    <select id="countMoneyByTime" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT sum(order_price) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{l} and #{time}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
    </select>

    <select id="countOrdersByTime2" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT count(*) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{timeItem} and #{time2}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
        <if test="eid!=null">
            AND orders.employee_id = #{eid}
        </if>
    </select>

    <select id="countMoneyByTime2" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT sum(order_price) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{l} and #{time}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
        <if test="eid!=null">
            AND orders.employee_id = #{eid}
        </if>
    </select>

    <select id="countOrdersByTime3" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT count(*) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{timeItem} and #{time2}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
        <if test="eid!=null">
            AND orders.employer_id = #{eid}
        </if>
    </select>

    <select id="countMoneyByTime3" resultType="java.lang.Integer" parameterType="java.lang.Long">
        SELECT sum(order_price) from orders WHERE orders.state in (3,4) and orders.end_time BETWEEN #{l} and #{time}
        <if test="serviceId!=null">
            AND orders.service_id = #{serviceId}
        </if>
        <if test="eid!=null">
            AND orders.employer_id = #{eid}
        </if>
    </select>

    <select id="countOrdersByEmployeeId" resultType="java.lang.Integer" parameterType="UserVO">
        SELECT COUNT(*) FROM orders WHERE employee_id = #{id} and state in (3,4)
    </select>

    <select id="countOrdersByEmployerId" resultType="java.lang.Integer" parameterType="UserVO">
        SELECT COUNT(*) FROM orders WHERE employer_id = #{id} and state in (3,4)
    </select>

    <delete id="deleteOrders" parameterType="OrdersVO">
        DELETE FROM
        <include refid="_table"/>
        <include refid="_primaryKey_condition"/>
    </delete>

    <select id="getAllOrderByPage" resultMap="ordersMapper" parameterType="java.lang.Integer">
      select * from orders limit #{page}, #{size}
    </select>
</mapper>